{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/babel-loader/lib/index.js!/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/ts-loader/index.js??ref--14-2!/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/employee/addEmployee.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/employee/addEmployee.vue","mtime":1706504160723},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/babel-loader/lib/index.js","mtime":1706160675266},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/ts-loader/index.js","mtime":1706160677894},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime-corejs2/helpers/defineProperty\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/@babel/runtime-corejs2/helpers/inherits\"));\n\nvar _tslib = require(\"tslib\");\n\nvar _vuePropertyDecorator = require(\"vue-property-decorator\");\n\nvar _index = _interopRequireDefault(require(\"@/components/HeadLable/index.vue\"));\n\nvar _employee = require(\"@/api/employee\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar default_1 =\n/*#__PURE__*/\nfunction (_Vue) {\n  (0, _inherits2.default)(default_1, _Vue);\n\n  function default_1() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, default_1);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));\n    _this.title = 'Add Employee';\n    _this.actionType = '';\n    _this.ruleForm = {\n      name: '',\n      phone: '',\n      // 'password': '',\n      // 'rePassword': '',\n      sex: 'Male',\n      idNumber: '',\n      username: ''\n    };\n    return _this;\n  } // private validateRepassword (rule:any, value:any, callback:any) {\n  //   if (value === '') {\n  //     callback(new Error('请再次输入密码'))\n  //   } else if (value !== this.ruleForm.password) {\n  //     callback(new Error('两次输入密码不一致!'))\n  //   } else {\n  //     callback()\n  //   }\n  // }\n\n\n  (0, _createClass2.default)(default_1, [{\n    key: \"isCellPhone\",\n    value: function isCellPhone(val) {\n      if (!/^(?:\\(\\d{3}\\)\\s?|\\d{3}-)?\\d{3}-\\d{4}$/.test(val)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"checkphone\",\n    value: function checkphone(rule, value, callback) {\n      // let phoneReg = /(^1[3|4|5|6|7|8|9]\\d{9}$)|(^09\\d{8}$)/;\n      if (value == '') {\n        callback(new Error('Please enter the phone number'));\n      } else if (!this.isCellPhone(value)) {\n        //引入methods中封装的检查手机格式的方法\n        callback(new Error('Please enter the correct number!'));\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"validID\",\n    value: function validID(rule, value, callback) {\n      // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\n      // let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\n      if (value == '') {\n        callback(new Error('Please enter the idNumber'));\n      } // else if (reg.test(value)) {\n      //   callback()\n      // }\n      else {\n          callback();\n        }\n    }\n  }, {\n    key: \"created\",\n    value: function created() {\n      this.actionType = this.$route.query.id ? 'edit' : 'add';\n\n      if (this.$route.query.id) {\n        this.title = 'Update Employee';\n        this.init();\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var id;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = this.$route.query.id;\n                (0, _employee.queryEmployeeById)(id).then(function (res) {\n                  // String(res.status) === '200'\n                  if (res.data.code === 200) {\n                    _this2.ruleForm = res.data.data;\n                    _this2.ruleForm.sex = res.data.data.sex === '0' ? 'Female' : 'Male'; // this.ruleForm.password = ''\n                  } else {\n                    _this2.$message.error(res.data.msg);\n                  } // if (res.data.code == 200) {\n                  //   const { data } = res.data\n                  //   this.ruleForm = data\n                  //   this.ruleForm.password = ''\n                  //   // this.ruleForm.rePassword = '' //JSON.parse(JSON.stringify(data.password));\n                  // } else {\n                  //   this.$message.error(res.data.desc)\n                  // }\n\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(formName, st) {\n      var _this3 = this;\n\n      ;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          if (_this3.actionType === 'add') {\n            var params = _objectSpread({}, _this3.ruleForm, {\n              sex: _this3.ruleForm.sex === 'Female' ? 0 : 1\n            });\n\n            (0, _employee.addEmployee)(params).then(function (res) {\n              if (res.data.code === 200) {\n                _this3.$message.success('Success ！');\n\n                if (!st) {\n                  _this3.$router.push({\n                    path: '/employee'\n                  });\n                } else {\n                  _this3.ruleForm = {\n                    username: '',\n                    name: '',\n                    phone: '',\n                    // 'password': '',\n                    // npm'rePassword': '',/\n                    sex: 'Male',\n                    idNumber: ''\n                  };\n                }\n              } else {\n                _this3.$message.error(res.data.msg);\n              }\n            }).catch(function () {// this.$message.error(res.data.msg)\n            });\n          } else {\n            var _params = _objectSpread({}, _this3.ruleForm, {\n              sex: _this3.ruleForm.sex === 'Female' ? 0 : 1\n            });\n\n            (0, _employee.editEmployee)(_params).then(function (res) {\n              if (res.data.code === 200) {\n                _this3.$message.success('Success ！');\n\n                _this3.$router.push({\n                  path: '/employee'\n                });\n              } else {\n                _this3.$message.error(res.data.msg);\n              }\n            }).catch(function () {// this.$message.error('请求出错了：' + err.message)\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }, {\n    key: \"rules\",\n    get: function get() {\n      return {\n        name: [{\n          required: true,\n          // 'message': '请输入员工姓名',\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('Please enter the name'));\n            } else {\n              var reg = /^[\\u4e00-\\u9fa5_a-zA-Z]{1,12}$/;\n\n              if (!reg.test(value)) {\n                callback(new Error('姓名输入不符，请输入1-12个字符'));\n              } else {\n                callback();\n              }\n\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        username: [{\n          required: true,\n          // message: '请输入账号',\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('Please enter your username'));\n            } else {\n              var reg = /^([a-z]|[0-9]){3,20}$/;\n\n              if (!reg.test(value)) {\n                callback(new Error('Account number input does not match, please enter 3-20 characters'));\n              } else {\n                callback();\n              }\n            }\n          },\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          validator: this.checkphone,\n          trigger: 'blur'\n        }],\n        idNumber: [{\n          required: true,\n          validator: this.validID,\n          trigger: 'blur'\n        }]\n      };\n    }\n  }]);\n  return default_1;\n}(_vuePropertyDecorator.Vue);\n\ndefault_1 = (0, _tslib.__decorate)([(0, _vuePropertyDecorator.Component)({\n  name: 'addShop',\n  components: {\n    HeadLable: _index.default\n  }\n})], default_1);\nvar _default = default_1;\nexports.default = _default;",{"version":3,"sources":["/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/employee/addEmployee.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport { queryEmployeeById, addEmployee, editEmployee } from '@/api/employee'\n\n@Component({\n  name: 'addShop',\n  components: {\n    HeadLable\n  }\n})\nexport default class extends Vue {\n  private title = 'Add Employee'\n  private actionType = ''\n  private ruleForm = {\n    name: '',\n    phone: '',\n    // 'password': '',\n    // 'rePassword': '',\n    sex: 'Male',\n    idNumber: '',\n    username: ''\n  }\n\n  // private validateRepassword (rule:any, value:any, callback:any) {\n  //   if (value === '') {\n  //     callback(new Error('请再次输入密码'))\n  //   } else if (value !== this.ruleForm.password) {\n  //     callback(new Error('两次输入密码不一致!'))\n  //   } else {\n  //     callback()\n  //   }\n  // }\n\n  private isCellPhone(val: any) {\n    if (!/^(?:\\(\\d{3}\\)\\s?|\\d{3}-)?\\d{3}-\\d{4}$/.test(val)) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  private checkphone(rule: any, value: any, callback: any) {\n    // let phoneReg = /(^1[3|4|5|6|7|8|9]\\d{9}$)|(^09\\d{8}$)/;\n    if (value == '') {\n      callback(new Error('Please enter the phone number'))\n    }\n    else if (!this.isCellPhone(value)) {\n      //引入methods中封装的检查手机格式的方法\n      callback(new Error('Please enter the correct number!'))\n    }\n    else {\n      callback()\n    }\n  }\n\n  private validID(rule: any, value: any, callback: any) {\n    // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\n    // let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\n    if (value == '') {\n      callback(new Error('Please enter the idNumber'))\n    }\n    // else if (reg.test(value)) {\n    //   callback()\n    // }\n    else {\n      callback()\n    }\n  }\n\n  get rules() {\n    return {\n      name: [\n        {\n          required: true,\n          // 'message': '请输入员工姓名',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter the name'))\n            } else {\n              const reg = /^[\\u4e00-\\u9fa5_a-zA-Z]{1,12}$/\n              if (!reg.test(value)) {\n                callback(new Error('姓名输入不符，请输入1-12个字符'))\n              } else {\n                callback()\n              }\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      username: [\n        {\n          required: true,\n          // message: '请输入账号',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter your username'))\n            } else {\n              const reg = /^([a-z]|[0-9]){3,20}$/\n              if (!reg.test(value)) {\n                callback(new Error('Account number input does not match, please enter 3-20 characters'))\n              } else {\n                callback()\n              }\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      phone: [{ required: true, validator: this.checkphone, trigger: 'blur' }],\n      idNumber: [{ required: true, validator: this.validID, trigger: 'blur' }]\n    }\n  }\n\n  created() {\n    this.actionType = this.$route.query.id ? 'edit' : 'add'\n    if (this.$route.query.id) {\n      this.title = 'Update Employee'\n      this.init()\n    }\n  }\n\n  private async init() {\n    const id = this.$route.query.id\n    queryEmployeeById(id).then((res: any) => {\n      // String(res.status) === '200'\n      if (res.data.code === 200) {\n        this.ruleForm = res.data.data\n        this.ruleForm.sex = res.data.data.sex === '0' ? 'Female' : 'Male'\n        // this.ruleForm.password = ''\n      } else {\n        this.$message.error(res.data.msg)\n      }\n      // if (res.data.code == 200) {\n      //   const { data } = res.data\n      //   this.ruleForm = data\n      //   this.ruleForm.password = ''\n      //   // this.ruleForm.rePassword = '' //JSON.parse(JSON.stringify(data.password));\n      // } else {\n      //   this.$message.error(res.data.desc)\n      // }\n    })\n  }\n\n  private submitForm(formName: any, st: any) {\n    ;(this.$refs[formName] as any).validate((valid: any) => {\n      if (valid) {\n        if (this.actionType === 'add') {\n          const params = {\n            ...this.ruleForm,\n            sex: this.ruleForm.sex === 'Female' ? 0 : 1\n          }\n          addEmployee(params)\n            .then((res: any) => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                if (!st) {\n                  this.$router.push({ path: '/employee' })\n                } else {\n                  this.ruleForm = {\n                    username: '',\n                    name: '',\n                    phone: '',\n                    // 'password': '',\n                    // npm'rePassword': '',/\n                    sex: 'Male',\n                    idNumber: ''\n                  }\n                }\n              } else {\n                this.$message.error(res.data.msg)\n              }\n            })\n            .catch(() => {\n              // this.$message.error(res.data.msg)\n            })\n        } else {\n          const params = {\n            ...this.ruleForm,\n            sex: this.ruleForm.sex === 'Female' ? 0 : 1\n          }\n          editEmployee(params)\n            .then((res: any) => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                this.$router.push({ path: '/employee' })\n              } else {\n                this.$message.error(res.data.msg)\n              }\n            })\n            .catch(() => {\n              // this.$message.error('请求出错了：' + err.message)\n            })\n        }\n      } else {\n        return false\n      }\n    })\n  }\n}\n"],"sourceRoot":""}]}