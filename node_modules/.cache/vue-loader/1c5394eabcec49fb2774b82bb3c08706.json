{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/dish/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/dish/index.vue","mtime":1706569511888},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/babel-loader/lib/index.js","mtime":1706160675266},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/ts-loader/index.js","mtime":1706160677894},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport {\n  getDishPage,\n  editDish,\n  deleteDish,\n  dishStatusByStatus,\n  dishCategoryList\n} from '@/api/dish'\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue'\nimport Empty from '@/components/Empty/index.vue'\nimport { baseUrl } from '@/config.json'\n\n@Component({\n  name: 'DishType',\n  components: {\n    HeadLable,\n    InputAutoComplete,\n    Empty\n  }\n})\nexport default class extends Vue {\n  private input: any = ''\n  private counts: number = 0\n  private page: number = 1\n  private pageSize: number = 10\n  private checkList: string[] = []\n  private tableData: [] = []\n  private dishState = ''\n  private dishCategoryList = []\n  private categoryId = ''\n  private dishStatus = ''\n  private isSearch: boolean = false\n  private saleStatus: any = [\n    {\n      value: 0,\n      label: 'Disabled'\n    },\n    {\n      value: 1,\n      label: 'Enabled'\n    }\n  ]\n\n  created() {\n    this.init()\n    this.getDishCategoryList()\n  }\n\n  initProp(val) {\n    this.input = val\n    this.initFun()\n  }\n\n  initFun() {\n    this.page = 1\n    this.init()\n  }\n\n  private async init(isSearch?) {\n    this.isSearch = isSearch\n    await getDishPage({\n      page: this.page,\n      pageSize: this.pageSize,\n      name: this.input || undefined,\n      categoryId: this.categoryId || undefined,\n      status: this.dishStatus\n    })\n      .then(res => {\n        if (res.data.code === 200) {\n          this.tableData = res.data && res.data.data && res.data.data.records\n          this.counts = Number(res.data.data.total)\n        }\n      })\n      .catch(err => {\n        this.$message.error('error:' + err.message)\n      })\n  }\n\n  // 添加\n  private addDishtype(st: string) {\n    if (st === 'add') {\n      this.$router.push({ path: '/dish/add' })\n    } else {\n      this.$router.push({ path: '/dish/add', query: { id: st } })\n    }\n  }\n\n  // 删除\n  private deleteHandle(type: string, id: any) {\n    if (type === 'batch' && id === null) {\n      if (this.checkList.length === 0) {\n        return this.$message.error('Please select the dish to delete')\n      }\n    }\n    this.$confirm('Confirm?', 'Confirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning'\n    }).then(() => {\n      deleteDish(type === 'batch' ? this.checkList.join(',') : id)\n        .then(res => {\n          if (res && res.data && res.data.code === 200) {\n            this.$message.success('Success!')\n            this.init()\n          } else {\n            this.$message.error(res.data.msg)\n          }\n        })\n        .catch(err => {\n          this.$message.error('error:' + err.message)\n        })\n    })\n  }\n  //获取菜品分类下拉数据\n  private getDishCategoryList() {\n    dishCategoryList({\n      type: 1\n    })\n      .then(res => {\n        if (res && res.data && res.data.code === 200) {\n          this.dishCategoryList = (\n            res.data &&\n            res.data.data &&\n            res.data.data\n          ).map(item => {\n            return { value: item.id, label: item.name }\n          })\n        }\n      })\n      .catch(() => {})\n  }\n\n  //状态更改\n  private statusHandle(row: any) {\n    let params: any = {}\n    if (typeof row === 'string') {\n      if (this.checkList.length === 0) {\n        this.$message.error('Please select the dish first!')\n        return false\n      }\n      params.id = this.checkList.join(',')\n      params.status = row\n    } else {\n      params.id = row.id\n      params.status = row.status ? '0' : '1'\n    }\n    this.dishState = params\n    this.$confirm('Confirm?', 'Confirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning'\n    }).then(() => {\n      // 起售停售---批量起售停售接口\n      dishStatusByStatus(this.dishState)\n        .then(res => {\n          if (res && res.data && res.data.code === 200) {\n            this.$message.success('Success!')\n            this.init()\n          } else {\n            this.$message.error(res.data.msg)\n          }\n        })\n        .catch(err => {\n          this.$message.error('error：' + err.message)\n        })\n    })\n  }\n\n  // 全部操作\n  private handleSelectionChange(val: any) {\n    let checkArr: any[] = []\n    val.forEach((n: any) => {\n      checkArr.push(n.id)\n    })\n    this.checkList = checkArr\n  }\n\n  private handleSizeChange(val: any) {\n    this.pageSize = val\n    this.init()\n  }\n\n  private handleCurrentChange(val: any) {\n    this.page = val\n    this.init()\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dish","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"container\">\n      <div class=\"tableBar\">\n        <label style=\"margin-right: 10px\">Name:</label>\n        <el-input v-model=\"input\"\n                  placeholder=\"Please enter the name\"\n                  style=\"width: 14%\"\n                  clearable\n                  @clear=\"init\"\n                  @keyup.enter.native=\"initFun\" />\n\n        <label style=\"margin-right: 10px; margin-left: 20px\">Category:</label>\n        <el-select v-model=\"categoryId\"\n                   style=\"width: 14%\"\n                   placeholder=\"Please select\"\n                   clearable\n                   @clear=\"init\">\n          <el-option v-for=\"item in dishCategoryList\"\n                     :key=\"item.value\"\n                     :label=\"item.label\"\n                     :value=\"item.value\" />\n        </el-select>\n\n        <label style=\"margin-right: 10px; margin-left: 20px\">Status:</label>\n        <el-select v-model=\"dishStatus\"\n                   style=\"width: 14%\"\n                   placeholder=\"Please select\"\n                   clearable\n                   @clear=\"init\">\n          <el-option v-for=\"item in saleStatus\"\n                     :key=\"item.value\"\n                     :label=\"item.label\"\n                     :value=\"item.value\" />\n        </el-select>\n        <el-button class=\"normal-btn continue\"\n                   @click=\"init(true)\">\n          Select\n        </el-button>\n\n        <div class=\"tableLab\">\n          <span class=\"delBut non\"\n                @click=\"deleteHandle('batch', null)\">Batch Delete</span>\n          <!-- <span class=\"blueBug non\" @click=\"statusHandle('1')\">批量启售</span>\n          <span\n            style=\"border: none\"\n            class=\"delBut non\"\n            @click=\"statusHandle('0')\"\n            >批量停售</span\n          > -->\n          <el-button type=\"primary\"\n                     style=\"margin-left: 15px\"\n                     @click=\"addDishtype('add')\">\n            + Add Dish\n          </el-button>\n        </div>\n      </div>\n      <el-table v-if=\"tableData.length\"\n                :data=\"tableData\"\n                stripe\n                class=\"tableBox\"\n                @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\"\n                         width=\"25\" />\n        <el-table-column prop=\"name\"\n                         label=\"Name\" />\n        <el-table-column prop=\"image\"\n                         label=\"Image\">\n          <template slot-scope=\"{ row }\">\n            <el-image style=\"width: 80px; height: 40px; border: none; cursor: pointer\"\n                      :src=\"row.image\">\n              <div slot=\"error\"\n                   class=\"image-slot\">\n                <img src=\"./../../assets/noImg.png\"\n                     style=\"width: auto; height: 40px; border: none\">\n              </div>\n            </el-image>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"categoryName\"\n                         label=\"Category\" />\n        <el-table-column label=\"Price\">\n          <template slot-scope=\"scope\">\n            <span style=\"margin-right: 10px\">￥{{ (scope.row.price ).toFixed(2)*100/100 }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Status\">\n          <template slot-scope=\"scope\">\n            <div class=\"tableColumn-status\"\n                 :class=\"{ 'stop-use': String(scope.row.status) === '0' }\">\n              {{ String(scope.row.status) === '0' ? 'Disabled' : 'Enabled' }}\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"updateTime\"\n                         label=\"Last Operation Time\"\n                         width=\"200\"/>\n        <el-table-column label=\"Operate\"\n                         width=\"250\"\n                         align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\"\n                       size=\"small\"\n                       class=\"blueBug\"\n                       @click=\"addDishtype(scope.row.id)\">\n              Update\n            </el-button>\n            <el-button type=\"text\"\n                       size=\"small\"\n                       class=\"delBut\"\n                       @click=\"deleteHandle('delete', scope.row.id)\">\n              Delete\n            </el-button>\n            <el-button type=\"text\"\n                       size=\"small\"\n                       class=\"non\"\n                       :class=\"{\n                         blueBug: scope.row.status == '0',\n                         delBut: scope.row.status != '0'\n                       }\"\n                       @click=\"statusHandle(scope.row)\">\n              {{ scope.row.status == '0' ? 'Enable' : 'Disable' }}\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <Empty v-else\n             :is-search=\"isSearch\" />\n      <el-pagination v-if=\"counts > 10\"\n                     class=\"pageList\"\n                     :page-sizes=\"[10, 20, 30, 40]\"\n                     :page-size=\"pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\"\n                     :total=\"counts\"\n                     @size-change=\"handleSizeChange\"\n                     @current-change=\"handleCurrentChange\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport {\n  getDishPage,\n  editDish,\n  deleteDish,\n  dishStatusByStatus,\n  dishCategoryList\n} from '@/api/dish'\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue'\nimport Empty from '@/components/Empty/index.vue'\nimport { baseUrl } from '@/config.json'\n\n@Component({\n  name: 'DishType',\n  components: {\n    HeadLable,\n    InputAutoComplete,\n    Empty\n  }\n})\nexport default class extends Vue {\n  private input: any = ''\n  private counts: number = 0\n  private page: number = 1\n  private pageSize: number = 10\n  private checkList: string[] = []\n  private tableData: [] = []\n  private dishState = ''\n  private dishCategoryList = []\n  private categoryId = ''\n  private dishStatus = ''\n  private isSearch: boolean = false\n  private saleStatus: any = [\n    {\n      value: 0,\n      label: 'Disabled'\n    },\n    {\n      value: 1,\n      label: 'Enabled'\n    }\n  ]\n\n  created() {\n    this.init()\n    this.getDishCategoryList()\n  }\n\n  initProp(val) {\n    this.input = val\n    this.initFun()\n  }\n\n  initFun() {\n    this.page = 1\n    this.init()\n  }\n\n  private async init(isSearch?) {\n    this.isSearch = isSearch\n    await getDishPage({\n      page: this.page,\n      pageSize: this.pageSize,\n      name: this.input || undefined,\n      categoryId: this.categoryId || undefined,\n      status: this.dishStatus\n    })\n      .then(res => {\n        if (res.data.code === 200) {\n          this.tableData = res.data && res.data.data && res.data.data.records\n          this.counts = Number(res.data.data.total)\n        }\n      })\n      .catch(err => {\n        this.$message.error('error:' + err.message)\n      })\n  }\n\n  // 添加\n  private addDishtype(st: string) {\n    if (st === 'add') {\n      this.$router.push({ path: '/dish/add' })\n    } else {\n      this.$router.push({ path: '/dish/add', query: { id: st } })\n    }\n  }\n\n  // 删除\n  private deleteHandle(type: string, id: any) {\n    if (type === 'batch' && id === null) {\n      if (this.checkList.length === 0) {\n        return this.$message.error('Please select the dish to delete')\n      }\n    }\n    this.$confirm('Confirm?', 'Confirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning'\n    }).then(() => {\n      deleteDish(type === 'batch' ? this.checkList.join(',') : id)\n        .then(res => {\n          if (res && res.data && res.data.code === 200) {\n            this.$message.success('Success!')\n            this.init()\n          } else {\n            this.$message.error(res.data.msg)\n          }\n        })\n        .catch(err => {\n          this.$message.error('error:' + err.message)\n        })\n    })\n  }\n  //获取菜品分类下拉数据\n  private getDishCategoryList() {\n    dishCategoryList({\n      type: 1\n    })\n      .then(res => {\n        if (res && res.data && res.data.code === 200) {\n          this.dishCategoryList = (\n            res.data &&\n            res.data.data &&\n            res.data.data\n          ).map(item => {\n            return { value: item.id, label: item.name }\n          })\n        }\n      })\n      .catch(() => {})\n  }\n\n  //状态更改\n  private statusHandle(row: any) {\n    let params: any = {}\n    if (typeof row === 'string') {\n      if (this.checkList.length === 0) {\n        this.$message.error('Please select the dish first!')\n        return false\n      }\n      params.id = this.checkList.join(',')\n      params.status = row\n    } else {\n      params.id = row.id\n      params.status = row.status ? '0' : '1'\n    }\n    this.dishState = params\n    this.$confirm('Confirm?', 'Confirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning'\n    }).then(() => {\n      // 起售停售---批量起售停售接口\n      dishStatusByStatus(this.dishState)\n        .then(res => {\n          if (res && res.data && res.data.code === 200) {\n            this.$message.success('Success!')\n            this.init()\n          } else {\n            this.$message.error(res.data.msg)\n          }\n        })\n        .catch(err => {\n          this.$message.error('error：' + err.message)\n        })\n    })\n  }\n\n  // 全部操作\n  private handleSelectionChange(val: any) {\n    let checkArr: any[] = []\n    val.forEach((n: any) => {\n      checkArr.push(n.id)\n    })\n    this.checkList = checkArr\n  }\n\n  private handleSizeChange(val: any) {\n    this.pageSize = val\n    this.init()\n  }\n\n  private handleCurrentChange(val: any) {\n    this.page = val\n    this.init()\n  }\n}\n</script>\n<style lang=\"scss\">\n.el-table-column--selection .cell {\n  padding-left: 10px;\n}\n</style>\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    margin: 30px;\n    .container {\n      background: #fff;\n      position: relative;\n      z-index: 1;\n      padding: 30px 28px;\n      border-radius: 4px;\n      //查询黑色按钮样式\n      .normal-btn {\n        background: #333333;\n        color: white;\n        margin-left: 20px;\n      }\n      .tableBar {\n        margin-bottom: 20px;\n\n        .tableLab {\n          display: inline-block;\n          float: right;\n          span {\n            cursor: pointer;\n            display: inline-block;\n            font-size: 14px;\n            padding: 0 20px;\n            color: $gray-2;\n          }\n        }\n      }\n      .tableBox {\n        width: 100%;\n        border: 1px solid $gray-5;\n        border-bottom: 0;\n      }\n      .pageList {\n        text-align: center;\n        margin-top: 30px;\n      }\n    }\n  }\n}\n</style>\n"]}]}