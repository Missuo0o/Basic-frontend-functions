{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/setmeal/addSetmeal.vue?vue&type=template&id=c313e5f0&scoped=true&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/setmeal/addSetmeal.vue","mtime":1706571815806},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706160678107},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"addBrand-container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"container\" },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"ruleForm\",\n              staticClass: \"demo-ruleForm\",\n              attrs: {\n                model: _vm.ruleForm,\n                rules: _vm.rules,\n                inline: true,\n                \"label-width\": \"180px\"\n              }\n            },\n            [\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Name:\", prop: \"name\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          placeholder: \"Please enter the name\",\n                          maxlength: \"20\"\n                        },\n                        model: {\n                          value: _vm.ruleForm.name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"name\", $$v)\n                          },\n                          expression: \"ruleForm.name\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Category:\", prop: \"idType\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"Please select the category\" },\n                          on: {\n                            change: function($event) {\n                              return _vm.$forceUpdate()\n                            }\n                          },\n                          model: {\n                            value: _vm.ruleForm.idType,\n                            callback: function($$v) {\n                              _vm.$set(_vm.ruleForm, \"idType\", $$v)\n                            },\n                            expression: \"ruleForm.idType\"\n                          }\n                        },\n                        _vm._l(_vm.setMealList, function(item, index) {\n                          return _c(\"el-option\", {\n                            key: index,\n                            attrs: { label: item.name, value: item.id }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Price:\", prop: \"price\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          placeholder: \"Please set the price\",\n                          maxlength: \"5\"\n                        },\n                        model: {\n                          value: _vm.ruleForm.price,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"price\", $$v)\n                          },\n                          expression: \"ruleForm.price\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Dish:\", required: \"\" } },\n                    [\n                      _c(\"el-form-item\", [\n                        _c(\"div\", { staticClass: \"addDish\" }, [\n                          _vm.dishTable.length == 0\n                            ? _c(\n                                \"span\",\n                                {\n                                  staticClass: \"addBut\",\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.openAddDish(\"new\")\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"\\n                + Add Dish\")]\n                              )\n                            : _vm._e(),\n                          _vm.dishTable.length != 0\n                            ? _c(\"div\", { staticClass: \"content\" }, [\n                                _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"addBut\",\n                                    staticStyle: { \"margin-bottom\": \"20px\" },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.openAddDish(\"change\")\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                  + Add Dish\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"table\" },\n                                  [\n                                    _c(\n                                      \"el-table\",\n                                      {\n                                        staticStyle: { width: \"100%\" },\n                                        attrs: { data: _vm.dishTable }\n                                      },\n                                      [\n                                        _c(\"el-table-column\", {\n                                          attrs: {\n                                            prop: \"name\",\n                                            label: \"Name\",\n                                            width: \"180\",\n                                            align: \"center\"\n                                          }\n                                        }),\n                                        _c(\"el-table-column\", {\n                                          attrs: {\n                                            prop: \"price\",\n                                            label: \"Price\",\n                                            width: \"180\",\n                                            align: \"center\"\n                                          },\n                                          scopedSlots: _vm._u(\n                                            [\n                                              {\n                                                key: \"default\",\n                                                fn: function(scope) {\n                                                  return [\n                                                    _vm._v(\n                                                      \"\\n                        \" +\n                                                        _vm._s(\n                                                          (Number(\n                                                            scope.row.price\n                                                          ).toFixed(2) *\n                                                            100) /\n                                                            100\n                                                        ) +\n                                                        \"\\n                      \"\n                                                    )\n                                                  ]\n                                                }\n                                              }\n                                            ],\n                                            null,\n                                            false,\n                                            1338860262\n                                          )\n                                        }),\n                                        _c(\"el-table-column\", {\n                                          attrs: {\n                                            prop: \"address\",\n                                            label: \"Number\",\n                                            align: \"center\"\n                                          },\n                                          scopedSlots: _vm._u(\n                                            [\n                                              {\n                                                key: \"default\",\n                                                fn: function(scope) {\n                                                  return [\n                                                    _c(\"el-input-number\", {\n                                                      attrs: {\n                                                        size: \"small\",\n                                                        min: 1,\n                                                        max: 99,\n                                                        label: \"Description\"\n                                                      },\n                                                      model: {\n                                                        value: scope.row.copies,\n                                                        callback: function(\n                                                          $$v\n                                                        ) {\n                                                          _vm.$set(\n                                                            scope.row,\n                                                            \"copies\",\n                                                            $$v\n                                                          )\n                                                        },\n                                                        expression:\n                                                          \"scope.row.copies\"\n                                                      }\n                                                    })\n                                                  ]\n                                                }\n                                              }\n                                            ],\n                                            null,\n                                            false,\n                                            1212654925\n                                          )\n                                        }),\n                                        _c(\"el-table-column\", {\n                                          attrs: {\n                                            prop: \"address\",\n                                            label: \"Operate\",\n                                            width: \"180px;\",\n                                            align: \"center\"\n                                          },\n                                          scopedSlots: _vm._u(\n                                            [\n                                              {\n                                                key: \"default\",\n                                                fn: function(scope) {\n                                                  return [\n                                                    _c(\n                                                      \"el-button\",\n                                                      {\n                                                        staticClass:\n                                                          \"delBut non\",\n                                                        attrs: {\n                                                          type: \"text\",\n                                                          size: \"small\"\n                                                        },\n                                                        on: {\n                                                          click: function(\n                                                            $event\n                                                          ) {\n                                                            return _vm.delDishHandle(\n                                                              scope.$index\n                                                            )\n                                                          }\n                                                        }\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          \"\\n                          Delete\\n                        \"\n                                                        )\n                                                      ]\n                                                    )\n                                                  ]\n                                                }\n                                              }\n                                            ],\n                                            null,\n                                            false,\n                                            627875364\n                                          )\n                                        })\n                                      ],\n                                      1\n                                    )\n                                  ],\n                                  1\n                                )\n                              ])\n                            : _vm._e()\n                        ])\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Image:\", required: \"\", prop: \"image\" } },\n                    [\n                      _c(\n                        \"image-upload\",\n                        {\n                          attrs: { \"prop-image-url\": _vm.imageUrl },\n                          on: { imageChange: _vm.imageChange }\n                        },\n                        [\n                          _vm._v(\"\\n            Image size not more than 2M\"),\n                          _c(\"br\"),\n                          _vm._v(\n                            \"Only PNG JPEG JPG type images can be uploaded\"\n                          ),\n                          _c(\"br\"),\n                          _vm._v(\n                            \"It is recommended to upload a 200*200 or 300*300 size image\\n          \"\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"address\" },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Description:\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          type: \"textarea\",\n                          rows: 3,\n                          maxlength: \"200\",\n                          placeholder: \"Package description, maximum 200 words\"\n                        },\n                        model: {\n                          value: _vm.ruleForm.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"description\", $$v)\n                          },\n                          expression: \"ruleForm.description\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"subBox address\" },\n                [\n                  _c(\n                    \"el-form-item\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          on: {\n                            click: function() {\n                              return _vm.$router.back()\n                            }\n                          }\n                        },\n                        [_vm._v(\"\\n            Cancel\\n          \")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          class: { continue: _vm.actionType === \"add\" },\n                          attrs: { type: \"primary\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.submitForm(\"ruleForm\", false)\n                            }\n                          }\n                        },\n                        [_vm._v(\"\\n            Submit\\n          \")]\n                      ),\n                      _vm.actionType == \"add\"\n                        ? _c(\n                            \"el-button\",\n                            {\n                              attrs: { type: \"primary\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.submitForm(\"ruleForm\", true)\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n            Submit and continue adding\\n          \"\n                              )\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ]\n          )\n        ],\n        1\n      ),\n      _vm.dialogVisible\n        ? _c(\n            \"el-dialog\",\n            {\n              staticClass: \"addDishList\",\n              attrs: {\n                title: \"Add Dish\",\n                visible: _vm.dialogVisible,\n                width: \"60%\",\n                \"before-close\": _vm.handleClose\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.dialogVisible = $event\n                }\n              }\n            },\n            [\n              _c(\n                \"el-input\",\n                {\n                  staticClass: \"seachDish\",\n                  staticStyle: { width: \"293px\", height: \"40px\" },\n                  attrs: {\n                    placeholder: \"Please enter the name of the dish\",\n                    size: \"small\",\n                    clearable: \"\"\n                  },\n                  model: {\n                    value: _vm.value,\n                    callback: function($$v) {\n                      _vm.value = $$v\n                    },\n                    expression: \"value\"\n                  }\n                },\n                [\n                  _c(\"i\", {\n                    staticClass: \"el-input__icon el-icon-search\",\n                    staticStyle: { cursor: \"pointer\" },\n                    attrs: { slot: \"prefix\" },\n                    on: { click: _vm.seachHandle },\n                    slot: \"prefix\"\n                  })\n                ]\n              ),\n              _vm.dialogVisible\n                ? _c(\"AddDish\", {\n                    ref: \"adddish\",\n                    attrs: {\n                      \"check-list\": _vm.checkList,\n                      \"seach-key\": _vm.seachKey,\n                      \"dish-list\": _vm.dishList\n                    },\n                    on: { checkList: _vm.getCheckList }\n                  })\n                : _vm._e(),\n              _c(\n                \"span\",\n                {\n                  staticClass: \"dialog-footer\",\n                  attrs: { slot: \"footer\" },\n                  slot: \"footer\"\n                },\n                [\n                  _c(\"el-button\", { on: { click: _vm.handleClose } }, [\n                    _vm._v(\"Cancel\")\n                  ]),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.addTableList }\n                    },\n                    [_vm._v(\"Submit\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}