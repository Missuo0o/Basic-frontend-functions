{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/employee/index.vue?vue&type=style&index=0&id=19442e4b&lang=scss&scoped=true&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/employee/index.vue","mtime":1706273266743},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/css-loader/index.js","mtime":1706160675578},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1706160678107},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/postcss-loader/src/index.js","mtime":1706160677279},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/sass-loader/dist/cjs.js","mtime":1706160677744},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/style-resources-loader/lib/index.js","mtime":1706160677827},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.disabled-text {\n  color: #bac0cd !important;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/employee","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"container\">\n      <div class=\"tableBar\">\n        <label style=\"margin-right: 5px\">Name：</label>\n        <el-input\n          v-model=\"input\"\n          placeholder=\"Please enter the name\"\n          style=\"width: 15%\"\n          clearable\n          @clear=\"init\"\n          @keyup.enter.native=\"initFun\"\n        />\n        <el-button class=\"normal-btn continue\" @click=\"init(true)\"\n          >Select</el-button\n        >\n        <el-button\n          type=\"primary\"\n          style=\"float: right\"\n          @click=\"addEmployeeHandle('add')\"\n        >\n          + Add Employee\n        </el-button>\n      </div>\n      <el-table\n        :data=\"tableData\"\n        stripe\n        v-if=\"tableData.length\"\n        class=\"tableBox\"\n      >\n        <el-table-column prop=\"name\" label=\"Name\" />\n        <el-table-column prop=\"username\" label=\"Username\" />\n        <el-table-column prop=\"phone\" label=\"Phone\" />\n        <el-table-column label=\"Status\">\n          <template slot-scope=\"scope\">\n            <div\n              class=\"tableColumn-status\"\n              :class=\"{ 'stop-use': String(scope.row.status) === '0' }\"\n            >\n              {{ String(scope.row.status) === '0' ? 'Disable' : 'Enable' }}\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"updateTime\" label=\"Last Operation Time\" />\n        <el-table-column label=\"Operate\" width=\"250\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              size=\"small\"\n              class=\"blueBug\"\n              :class=\"{ 'disabled-text': scope.row.username === 'admin' }\"\n              :disabled=\"scope.row.username === 'admin'\"\n              @click=\"addEmployeeHandle(scope.row.id, scope.row.username)\"\n            >\n              Update\n            </el-button>\n            <el-button\n              :disabled=\"scope.row.username === 'admin'\"\n              type=\"text\"\n              size=\"small\"\n              class=\"non\"\n              :class=\"{\n                'disabled-text': scope.row.username === 'admin',\n                blueBug: scope.row.status == '0',\n                delBut: scope.row.status != '0',\n              }\"\n              @click=\"statusHandle(scope.row)\"\n            >\n              {{ scope.row.status == '1' ? 'Disable' : 'Enable' }}\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <Empty v-else :is-search=\"isSearch\" />\n      <el-pagination\n        class=\"pageList\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"counts\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport { getEmployeeList, enableOrDisableEmployee } from '@/api/employee'\nimport { UserModule } from '@/store/modules/user'\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue'\nimport Empty from '@/components/Empty/index.vue'\n\n@Component({\n  name: 'Employee',\n  components: {\n    HeadLable,\n    InputAutoComplete,\n    Empty,\n  },\n})\nexport default class extends Vue {\n  private input: any = ''\n  private counts: number = 0\n  private page: number = 1\n  private pageSize: number = 10\n  private tableData = []\n  private id = ''\n  private status = ''\n  private isSearch: boolean = false\n\n  created() {\n    this.init()\n  }\n\n  initProp(val) {\n    this.input = val\n    this.initFun()\n  }\n\n  initFun() {\n    this.page = 1\n    this.init()\n  }\n\n  get userName() {\n    return UserModule.username\n  }\n\n  private async init(isSearch?: boolean) {\n    this.isSearch = isSearch\n    const params = {\n      page: this.page,\n      pageSize: this.pageSize,\n      name: this.input ? this.input : undefined,\n    }\n    await getEmployeeList(params)\n      .then((res: any) => {\n        if (String(res.data.code) === '200') {\n          this.tableData = res.data && res.data.data && res.data.data.records\n          this.counts = res.data.data.total\n        }\n        // if (!res.data.data.records.length && type === 'search') {\n        //   this.$message.error('未搜索到相关员工，请核对员工姓名是否正确')\n        // }\n      })\n      .catch((err) => {\n        this.$message.error('Error：' + err.message)\n      })\n  }\n\n  // 添加\n  private addEmployeeHandle(st: string, username: string) {\n    if (st === 'add') {\n      this.$router.push({ path: '/employee/add' })\n    } else {\n      if (username === 'admin') {\n        return\n      }\n      this.$router.push({ path: '/employee/add', query: { id: st } })\n    }\n  }\n\n  //状态修改\n  private statusHandle(row: any) {\n    if (row.username === 'admin') {\n      return\n    }\n    this.id = row.id\n    this.status = row.status\n    this.$confirm('Are you sure ?', 'Confirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning',\n    }).then(() => {\n      enableOrDisableEmployee({ id: this.id, status: !this.status ? 1 : 0 })\n        .then((res) => {\n          if (String(res.status) === '200') {\n            this.$message.success('Success!')\n            this.init()\n          }\n        })\n        .catch((err) => {\n          this.$message.error('Error：' + err.message)\n        })\n    })\n  }\n\n  private handleSizeChange(val: any) {\n    this.pageSize = val\n    this.init()\n  }\n\n  private handleCurrentChange(val: any) {\n    this.page = val\n    this.init()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.disabled-text {\n  color: #bac0cd !important;\n}\n</style>\n"]}]}