{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/category/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/category/index.vue","mtime":1706160678336},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/babel-loader/lib/index.js","mtime":1706160675266},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/ts-loader/index.js","mtime":1706160677894},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport {\n  getCategoryPage,\n  deleCategory,\n  editCategory,\n  addCategory,\n  enableOrDisableEmployee\n} from '@/api/category'\nimport Empty from '@/components/Empty/index.vue'\n\n@Component({\n  name: 'Category',\n  components: {\n    HeadLable,\n    Empty\n  }\n})\nexport default class extends Vue {\n  private options: any = [\n    {\n      value: 1,\n      label: 'Dish'\n    },\n    {\n      value: 2,\n      label: 'Combo'\n    }\n  ]\n  private actionType: string = ''\n  private id = ''\n  private status = ''\n  private categoryType: number = null\n  private name: string = ''\n  private action: string = ''\n  private counts: number = 0\n  private page: number = 1\n  private pageSize: number = 10\n  private tableData = []\n  private type = ''\n  private isSearch: boolean = false\n  private classData: any = {\n    title: 'Type',\n    dialogVisible: false,\n    categoryId: '',\n    name: '',\n    sort: ''\n  }\n\n  get rules() {\n    return {\n      name: [\n        {\n          required: true,\n          trigger: 'blur',\n          validator: (rule: any, value: string, callback: Function) => {\n            // const reg = /[\\u4e00-\\u9fa5]/\n            var reg = new RegExp('^[A-Za-z\\u4e00-\\u9fa5]+$')\n            if (!value) {\n              callback(new Error(this.classData.title + ' can not be empty'))\n            } else if (value.length < 2) {\n              callback(new Error('Please enter 2-20 characters'))\n            } else {\n              callback()\n            }\n          }\n        }\n      ],\n      sort: [\n        {\n          required: true,\n          trigger: 'blur',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (value || String(value) === '0') {\n              const reg = /^\\d+$/\n              if (!reg.test(value)) {\n                callback(new Error('Please enter a number'))\n              } else if (Number(value) > 99) {\n                callback(new Error('Plase enter 0~99'))\n              } else {\n                callback()\n              }\n            } else {\n              callback(new Error('Sorting cannot be empty'))\n            }\n          }\n        }\n      ]\n    }\n  }\n\n  created() {\n    this.init()\n  }\n\n  // 初始化信息\n  private async init(isSearch?) {\n    this.isSearch = isSearch\n    await getCategoryPage({\n      page: this.page,\n      pageSize: this.pageSize,\n      name: this.name ? this.name : undefined,\n      type: this.categoryType ? this.categoryType : undefined\n    })\n      .then(res => {\n        if (String(res.data.code) === '200') {\n          this.tableData =\n            res && res.data && res.data.data && res.data.data.records\n          this.counts = Number(res.data.data.total)\n        } else {\n          this.$message.error(res.data.desc)\n        }\n      })\n      .catch(err => {\n        console.log(err, 'err')\n        this.$message.error('error：' + err.message)\n      })\n  }\n\n  // 添加\n  private addClass(st: any) {\n    if (st == 'class') {\n      this.classData.title = 'Dish Category'\n      this.type = '1'\n    } else {\n      this.classData.title = 'Combo Category'\n      this.type = '2'\n    }\n    this.action = 'add'\n    this.classData.name = ''\n    this.classData.sort = ''\n    this.classData.dialogVisible = true\n    this.actionType = 'add'\n  }\n\n  // 修改\n  private editHandle(dat: any) {\n    this.classData.title = 'Update Category'\n    this.action = 'edit'\n    this.classData.name = dat.name\n    this.classData.sort = dat.sort\n    this.classData.id = dat.id\n    this.classData.dialogVisible = true\n    this.actionType = 'edit'\n  }\n\n  // 关闭弹窗\n  private handleClose(st: string) {\n    console.log(this.$refs.classData, 'this.$refs.classData')\n    this.classData.dialogVisible = false\n    //对该表单项进行重置，将其值重置为初始值并移除校验结果\n    this.$refs.classData.resetFields()\n  }\n\n  //状态修改\n  private statusHandle(row: any) {\n    this.id = row.id\n    this.status = row.status\n    this.$confirm('Confirm ?', 'Comfirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning',\n      customClass: 'customClass'\n    }).then(() => {\n      enableOrDisableEmployee({ id: this.id, status: !this.status ? 1 : 0 })\n        .then(res => {\n          if (String(res.status) === '200') {\n            this.$message.success('Success ！')\n            this.init()\n          }\n        })\n        .catch(err => {\n          this.$message.error('error：' + err.message)\n        })\n    })\n  }\n\n  //删除\n  private deleteHandle(id: any) {\n    this.$confirm('Confirm ?', 'Comfirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning'\n    }).then(() => {\n      deleCategory(id)\n        .then(res => {\n          if (res.data.code === 200) {\n            this.$message.success('Success ！')\n            this.init()\n          } else {\n            this.$message.error(res.data.msg)\n          }\n        })\n        .catch(err => {\n          this.$message.error('error：' + err.message)\n        })\n    })\n  }\n\n  $refs!: {\n    classData: any\n  }\n\n  //数据提交\n  submitForm(st: any) {\n    if (this.action === 'add') {\n      this.$refs.classData.validate((value: boolean) => {\n        if (value) {\n          addCategory({\n            name: this.classData.name,\n            type: this.type,\n            sort: this.classData.sort\n          })\n            .then(res => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                this.$refs.classData.resetFields()\n                if (!st) {\n                  this.classData.dialogVisible = false\n                }\n                this.init()\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n            })\n            .catch(err => {\n              this.$message.error('error：' + err.message)\n            })\n        }\n      })\n    } else {\n      this.$refs.classData.validate((value: boolean) => {\n        if (value) {\n          editCategory({\n            id: this.classData.id,\n            name: this.classData.name,\n            sort: this.classData.sort\n          })\n            .then(res => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                this.classData.dialogVisible = false\n                this.$refs.classData.resetFields()\n                this.init()\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n            })\n            .catch(err => {\n              this.$message.error('error：' + err.message)\n            })\n        }\n      })\n    }\n  }\n\n  //分页\n  private handleSizeChange(val: any) {\n    this.pageSize = val\n    this.init()\n  }\n\n  private handleCurrentChange(val: any) {\n    this.page = val\n    this.init()\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"src/views/category","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"container\">\n      <div class=\"tableBar\"\n           style=\"display: inline-block; width: 100%\">\n        <label style=\"margin-right: 10px\">Name：</label>\n        <el-input v-model=\"name\"\n                  style=\"width: 15%\"\n                  clearable\n                  @clear=\"init\"\n                  @keyup.enter.native=\"init\" />\n\n        <label style=\"margin-right: 5px; margin-left: 20px\">Type：</label>\n        <el-select v-model=\"categoryType\"\n                   clearable\n                   style=\"width: 15%\"\n                   @clear=\"init\">\n          <el-option v-for=\"item in options\"\n                     :key=\"item.value\"\n                     :label=\"item.label\"\n                     :value=\"item.value\" />\n        </el-select>\n\n        <div style=\"float: right\">\n          <el-button type=\"primary\"\n                     class=\"continue\"\n                     @click=\"addClass('class')\">\n            + Add Dish Category\n          </el-button>\n          <el-button type=\"primary\"\n                     style=\"margin-left:20px\"\n                     @click=\"addClass('meal')\">\n            + Add Combo Category\n          </el-button>\n        </div>\n\n        <el-button class=\"normal-btn continue\"\n                   @click=\"init(true)\">\n          Select\n        </el-button>\n      </div>\n      <el-table v-if=\"tableData.length\"\n                :data=\"tableData\"\n                stripe\n                class=\"tableBox\">\n        <el-table-column prop=\"name\"\n                         label=\"Name\" />\n        <el-table-column prop=\"type\"\n                         label=\"Type\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.type == '1' ? 'Dish' : 'Combo' }}</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"sort\"\n                         label=\"Sort\" />\n        <el-table-column label=\"Status\">\n          <template slot-scope=\"scope\">\n            <div class=\"tableColumn-status\"\n                 :class=\"{ 'stop-use': String(scope.row.status) === '0' }\">\n              {{ String(scope.row.status) === '0' ? 'Disable' : 'Enable' }}\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"updateTime\"\n                         label=\"Last Operation Time\" />\n        <el-table-column label=\"Operate\"\n                         width=\"250\"\n                         align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\"\n                       size=\"small\"\n                       class=\"blueBug\"\n                       @click=\"editHandle(scope.row)\">\n              Update\n            </el-button>\n            <el-button type=\"text\"\n                       size=\"small\"\n                       class=\"delBut\"\n                       @click=\"deleteHandle(scope.row.id)\">\n              Delete\n            </el-button>\n            <el-button type=\"text\"\n                       size=\"small\"\n                       class=\"non\"\n                       :class=\"{\n                         blueBug: scope.row.status == '0',\n                         delBut: scope.row.status != '0'\n                       }\"\n                       @click=\"statusHandle(scope.row)\">\n              {{ scope.row.status == '1' ? 'Disable' : 'Enable' }}\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <Empty v-else\n             :is-search=\"isSearch\" />\n      <el-pagination v-if=\"counts > 10\"\n                     class=\"pageList\"\n                     :page-sizes=\"[10, 20, 30, 40]\"\n                     :page-size=\"pageSize\"\n                     layout=\"total, sizes, prev, pager, next, jumper\"\n                     :total=\"counts\"\n                     @size-change=\"handleSizeChange\"\n                     @current-change=\"handleCurrentChange\" />\n    </div>\n    <el-dialog :title=\"classData.title\"\n               :visible.sync=\"classData.dialogVisible\"\n               width=\"30%\"\n               :before-close=\"handleClose\">\n      <el-form ref=\"classData\"\n               :model=\"classData\"\n               class=\"demo-form-inline\"\n               :rules=\"rules\"\n               label-width=\"100px\">\n        <el-form-item label=\"Name：\"\n                      prop=\"name\">\n          <el-input v-model=\"classData.name\"\n                    placeholder=\"Please enter the name\"\n                    maxlength=\"20\" />\n        </el-form-item>\n        <el-form-item label=\"Sort：\"\n                      prop=\"sort\">\n          <el-input v-model=\"classData.sort\"\n                    placeholder=\"Please enter the sort\" />\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button size=\"medium\"\n                   @click=\"\n            ;(classData.dialogVisible = false), $refs.classData.resetFields()\n                   \">Cancel</el-button>\n        <el-button type=\"primary\"\n                   :class=\"{ continue: actionType === 'add' }\"\n                   size=\"medium\"\n                   @click=\"submitForm()\">Submit</el-button>\n        <el-button v-if=\"action != 'edit'\"\n                   type=\"primary\"\n                   size=\"medium\"\n                   @click=\"submitForm('go')\">\n          Submit and continue adding\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport {\n  getCategoryPage,\n  deleCategory,\n  editCategory,\n  addCategory,\n  enableOrDisableEmployee\n} from '@/api/category'\nimport Empty from '@/components/Empty/index.vue'\n\n@Component({\n  name: 'Category',\n  components: {\n    HeadLable,\n    Empty\n  }\n})\nexport default class extends Vue {\n  private options: any = [\n    {\n      value: 1,\n      label: 'Dish'\n    },\n    {\n      value: 2,\n      label: 'Combo'\n    }\n  ]\n  private actionType: string = ''\n  private id = ''\n  private status = ''\n  private categoryType: number = null\n  private name: string = ''\n  private action: string = ''\n  private counts: number = 0\n  private page: number = 1\n  private pageSize: number = 10\n  private tableData = []\n  private type = ''\n  private isSearch: boolean = false\n  private classData: any = {\n    title: 'Type',\n    dialogVisible: false,\n    categoryId: '',\n    name: '',\n    sort: ''\n  }\n\n  get rules() {\n    return {\n      name: [\n        {\n          required: true,\n          trigger: 'blur',\n          validator: (rule: any, value: string, callback: Function) => {\n            // const reg = /[\\u4e00-\\u9fa5]/\n            var reg = new RegExp('^[A-Za-z\\u4e00-\\u9fa5]+$')\n            if (!value) {\n              callback(new Error(this.classData.title + ' can not be empty'))\n            } else if (value.length < 2) {\n              callback(new Error('Please enter 2-20 characters'))\n            } else {\n              callback()\n            }\n          }\n        }\n      ],\n      sort: [\n        {\n          required: true,\n          trigger: 'blur',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (value || String(value) === '0') {\n              const reg = /^\\d+$/\n              if (!reg.test(value)) {\n                callback(new Error('Please enter a number'))\n              } else if (Number(value) > 99) {\n                callback(new Error('Plase enter 0~99'))\n              } else {\n                callback()\n              }\n            } else {\n              callback(new Error('Sorting cannot be empty'))\n            }\n          }\n        }\n      ]\n    }\n  }\n\n  created() {\n    this.init()\n  }\n\n  // 初始化信息\n  private async init(isSearch?) {\n    this.isSearch = isSearch\n    await getCategoryPage({\n      page: this.page,\n      pageSize: this.pageSize,\n      name: this.name ? this.name : undefined,\n      type: this.categoryType ? this.categoryType : undefined\n    })\n      .then(res => {\n        if (String(res.data.code) === '200') {\n          this.tableData =\n            res && res.data && res.data.data && res.data.data.records\n          this.counts = Number(res.data.data.total)\n        } else {\n          this.$message.error(res.data.desc)\n        }\n      })\n      .catch(err => {\n        console.log(err, 'err')\n        this.$message.error('error：' + err.message)\n      })\n  }\n\n  // 添加\n  private addClass(st: any) {\n    if (st == 'class') {\n      this.classData.title = 'Dish Category'\n      this.type = '1'\n    } else {\n      this.classData.title = 'Combo Category'\n      this.type = '2'\n    }\n    this.action = 'add'\n    this.classData.name = ''\n    this.classData.sort = ''\n    this.classData.dialogVisible = true\n    this.actionType = 'add'\n  }\n\n  // 修改\n  private editHandle(dat: any) {\n    this.classData.title = 'Update Category'\n    this.action = 'edit'\n    this.classData.name = dat.name\n    this.classData.sort = dat.sort\n    this.classData.id = dat.id\n    this.classData.dialogVisible = true\n    this.actionType = 'edit'\n  }\n\n  // 关闭弹窗\n  private handleClose(st: string) {\n    console.log(this.$refs.classData, 'this.$refs.classData')\n    this.classData.dialogVisible = false\n    //对该表单项进行重置，将其值重置为初始值并移除校验结果\n    this.$refs.classData.resetFields()\n  }\n\n  //状态修改\n  private statusHandle(row: any) {\n    this.id = row.id\n    this.status = row.status\n    this.$confirm('Confirm ?', 'Comfirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning',\n      customClass: 'customClass'\n    }).then(() => {\n      enableOrDisableEmployee({ id: this.id, status: !this.status ? 1 : 0 })\n        .then(res => {\n          if (String(res.status) === '200') {\n            this.$message.success('Success ！')\n            this.init()\n          }\n        })\n        .catch(err => {\n          this.$message.error('error：' + err.message)\n        })\n    })\n  }\n\n  //删除\n  private deleteHandle(id: any) {\n    this.$confirm('Confirm ?', 'Comfirm', {\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      type: 'warning'\n    }).then(() => {\n      deleCategory(id)\n        .then(res => {\n          if (res.data.code === 200) {\n            this.$message.success('Success ！')\n            this.init()\n          } else {\n            this.$message.error(res.data.msg)\n          }\n        })\n        .catch(err => {\n          this.$message.error('error：' + err.message)\n        })\n    })\n  }\n\n  $refs!: {\n    classData: any\n  }\n\n  //数据提交\n  submitForm(st: any) {\n    if (this.action === 'add') {\n      this.$refs.classData.validate((value: boolean) => {\n        if (value) {\n          addCategory({\n            name: this.classData.name,\n            type: this.type,\n            sort: this.classData.sort\n          })\n            .then(res => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                this.$refs.classData.resetFields()\n                if (!st) {\n                  this.classData.dialogVisible = false\n                }\n                this.init()\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n            })\n            .catch(err => {\n              this.$message.error('error：' + err.message)\n            })\n        }\n      })\n    } else {\n      this.$refs.classData.validate((value: boolean) => {\n        if (value) {\n          editCategory({\n            id: this.classData.id,\n            name: this.classData.name,\n            sort: this.classData.sort\n          })\n            .then(res => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                this.classData.dialogVisible = false\n                this.$refs.classData.resetFields()\n                this.init()\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n            })\n            .catch(err => {\n              this.$message.error('error：' + err.message)\n            })\n        }\n      })\n    }\n  }\n\n  //分页\n  private handleSizeChange(val: any) {\n    this.pageSize = val\n    this.init()\n  }\n\n  private handleCurrentChange(val: any) {\n    this.page = val\n    this.init()\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    margin: 30px;\n\n    .container {\n      background: #fff;\n      position: relative;\n      z-index: 1;\n      padding: 30px 28px;\n      border-radius: 4px;\n\n      .tableBar {\n        display: flex;\n        margin-bottom: 20px;\n        justify-content: space-between;\n      }\n\n      .tableBox {\n        width: 100%;\n        border: 1px solid $gray-5;\n        border-bottom: 0;\n      }\n\n      .pageList {\n        text-align: center;\n        margin-top: 30px;\n      }\n      //查询黑色按钮样式\n      .normal-btn {\n        background: #333333;\n        color: white;\n        margin-left: 20px;\n      }\n    }\n  }\n}\n</style>\n<style lang='scss'>\n// .customClass {\n//   .el-button--primary {\n//     background-color: #ffc200 !important ;\n//   }\n// }\n</style>\n"]}]}