{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/components/Breadcrumb/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/components/Breadcrumb/index.vue","mtime":1706160678330},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/babel-loader/lib/index.js","mtime":1706160675266},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/ts-loader/index.js","mtime":1706160677894},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport pathToRegexp from 'path-to-regexp'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { RouteRecord, Route } from 'vue-router'\n\n@Component({\n  'name': 'Breadcrumb'\n})\n\nexport default class extends Vue {\n  private breadcrumbs: RouteRecord[] = []\n  @Watch('$route')\n  private onRouteChange(route: Route) {\n    // if you go to the redirect page, do not update the breadcrumbs\n    if (route.path.startsWith('/redirect/')) {\n      return\n    }\n\n    this.getBreadcrumb()\n  }\n\n  created () {\n    this.getBreadcrumb()\n  }\n\n  private getBreadcrumb () {\n    let matched = this.$route.matched.filter(\n      item => item.meta && item.meta.title\n    )\n    const first = matched[0]\n    // if (!this.isDashboard(first)) {\n    //   matched = [\n    //     { path: '/', meta: { title: '集团管理' } } as RouteRecord\n    //   ].concat(matched)\n    // }\n    this.breadcrumbs = matched.filter(item => {\n      return item.meta && item.meta.title && item.meta.breadcrumb !== false\n    })\n  }\n\n  private isDashboard (route: RouteRecord) {\n    const name = route && route.meta && route.meta.title\n    return name === '集团管理'\n  }\n\n  private pathCompile (path: string) {\n    // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n    const { params } = this.$route\n    const toPath = pathToRegexp.compile(path)\n    return toPath(params)\n  }\n\n  private handleLink (item: any) {\n    const { redirect, path } = item\n    if (redirect) {\n      this.$router.push(redirect)\n      return\n    }\n    this.$router.push(this.pathCompile(path))\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Breadcrumb","sourcesContent":["<template>\n  <el-breadcrumb\n    class=\"app-breadcrumb\"\n    separator=\"/\"\n  >\n    <transition-group name=\"breadcrumb\">\n      <el-breadcrumb-item\n        v-for=\"(item, index) in breadcrumbs\"\n        :key=\"item.path\"\n      >\n        <span\n          v-if=\"item.redirect === 'noredirect' || index === breadcrumbs.length-1\"\n          class=\"no-redirect\"\n        >{{ item.meta.title }}</span>\n        <a\n          v-else\n          @click.prevent=\"handleLink(item)\"\n        >{{ item.meta.title }}</a>\n      </el-breadcrumb-item>\n    </transition-group>\n  </el-breadcrumb>\n</template>\n\n<script lang=\"ts\">\nimport pathToRegexp from 'path-to-regexp'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { RouteRecord, Route } from 'vue-router'\n\n@Component({\n  'name': 'Breadcrumb'\n})\n\nexport default class extends Vue {\n  private breadcrumbs: RouteRecord[] = []\n  @Watch('$route')\n  private onRouteChange(route: Route) {\n    // if you go to the redirect page, do not update the breadcrumbs\n    if (route.path.startsWith('/redirect/')) {\n      return\n    }\n\n    this.getBreadcrumb()\n  }\n\n  created () {\n    this.getBreadcrumb()\n  }\n\n  private getBreadcrumb () {\n    let matched = this.$route.matched.filter(\n      item => item.meta && item.meta.title\n    )\n    const first = matched[0]\n    // if (!this.isDashboard(first)) {\n    //   matched = [\n    //     { path: '/', meta: { title: '集团管理' } } as RouteRecord\n    //   ].concat(matched)\n    // }\n    this.breadcrumbs = matched.filter(item => {\n      return item.meta && item.meta.title && item.meta.breadcrumb !== false\n    })\n  }\n\n  private isDashboard (route: RouteRecord) {\n    const name = route && route.meta && route.meta.title\n    return name === '集团管理'\n  }\n\n  private pathCompile (path: string) {\n    // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n    const { params } = this.$route\n    const toPath = pathToRegexp.compile(path)\n    return toPath(params)\n  }\n\n  private handleLink (item: any) {\n    const { redirect, path } = item\n    if (redirect) {\n      this.$router.push(redirect)\n      return\n    }\n    this.$router.push(this.pathCompile(path))\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-breadcrumb__inner,\n.el-breadcrumb__inner a {\n  font-weight: 400 !important;\n}\n\n.app-breadcrumb.el-breadcrumb {\n  display: inline-block;\n  font-size: 14px;\n  line-height: 50px;\n  margin-left: 8px;\n\n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n}\n</style>\n"]}]}