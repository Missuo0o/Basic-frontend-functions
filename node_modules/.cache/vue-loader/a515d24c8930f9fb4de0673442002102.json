{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/dish/addDishtype.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/dish/addDishtype.vue","mtime":1706504814899},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/babel-loader/lib/index.js","mtime":1706160675266},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/ts-loader/index.js","mtime":1706160677894},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport SelectInput from './components/SelectInput.vue'\nimport ImageUpload from '@/components/ImgUpload/index.vue'\n// getFlavorList口味列表暂时不做 getDishTypeList\nimport {\n  queryDishById,\n  addDish,\n  editDish,\n  getCategoryList,\n  commonDownload\n} from '@/api/dish'\nimport { baseUrl } from '@/config.json'\nimport { getToken } from '@/utils/cookies'\n@Component({\n  name: 'addShop',\n  components: {\n    HeadLable,\n    SelectInput,\n    ImageUpload\n  }\n})\nexport default class extends Vue {\n  private restKey: number = 0\n  private textarea: string = ''\n  private value: string = ''\n  private imageUrl: string = ''\n  private actionType: string = ''\n  private dishList: string[] = []\n  private dishFlavorsData: any[] = [] //原始口味数据\n  private dishFlavors: any[] = [] //待上传口味的数据\n  private leftDishFlavors: any[] = [] //下拉框剩余可选择的口味数据\n  private vueRest = '1'\n  private index = 0\n  private inputStyle = { flex: 1 }\n  private headers = {\n    token: getToken()\n  }\n  private ruleForm = {\n    name: '',\n    id: '',\n    price: '',\n    code: '',\n    image: '',\n    description: '',\n    dishFlavors: [],\n    status: true,\n    categoryId: ''\n  }\n\n  get rules() {\n    return {\n      name: [\n        {\n          required: true,\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter the name'))\n            } else {\n              const reg = /^([A-Za-z0-9\\u4e00-\\u9fa5]){1,32}$/\n              if (!reg.test(value)) {\n                callback(new Error('The input of the dish name does not match, please enter 2-20 characters'))\n              } else {\n                callback()\n              }\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      categoryId: [\n        { required: true, message: 'Please select a category', trigger: 'change' }\n      ],\n      image: {\n        required: true,\n        message: 'Image cannot be empty'\n      },\n      price: [\n        {\n          required: true,\n          // 'message': '请填写菜品价格',\n          validator: (rules: any, value: string, callback: Function) => {\n            const reg = /^([1-9]\\d{0,5}|0)(\\.\\d{1,2})?$/\n            if (!reg.test(value) || Number(value) <= 0) {\n              callback(\n                new Error(\n                  'Greater than zero and with up to two decimal places'\n                )\n              )\n            } else {\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      code: [{ required: true, message: 'Please fill in the product code', trigger: 'blur' }]\n    }\n  }\n\n  created() {\n    this.getDishList()\n    // 口味临时数据\n    this.getFlavorListHand()\n    this.actionType = this.$route.query.id ? 'edit' : 'add'\n    if (this.$route.query.id) {\n      this.init()\n    }\n  }\n\n  mounted() {}\n  @Watch('dishFlavors')\n  changeDishFlavors() {\n    this.getLeftDishFlavors()\n  }\n\n  //过滤已选择的口味下拉框无法再次选择\n  getLeftDishFlavors() {\n    let arr = []\n    this.dishFlavorsData.map(item => {\n      if (\n        this.dishFlavors.findIndex(item1 => item.name === item1.name) === -1\n      ) {\n        arr.push(item)\n      }\n    })\n    this.leftDishFlavors = arr\n  }\n\n  private selectHandle(val: any, key: any, ind: any) {\n    const arrDate = [...this.dishFlavors]\n    const index = this.dishFlavorsData.findIndex(item => item.name === val)\n    arrDate[key] = JSON.parse(JSON.stringify(this.dishFlavorsData[index]))\n    this.dishFlavors = arrDate\n  }\n\n  private async init() {\n    queryDishById(this.$route.query.id).then(res => {\n      if (res && res.data && res.data.code === 200) {\n        this.ruleForm = { ...res.data.data }\n        this.ruleForm.price = String(res.data.data.price)\n        this.ruleForm.status = res.data.data.status == '1'\n        this.dishFlavors =\n          res.data.data.flavors &&\n          res.data.data.flavors.map(obj => ({\n            ...obj,\n            value: JSON.parse(obj.value)\n          }))\n        let arr = []\n        this.getLeftDishFlavors()\n        this.imageUrl = res.data.data.image\n      } else {\n        this.$message.error(res.data.msg)\n      }\n    })\n  }\n\n  // 按钮 - 添加口味\n  private addFlavore() {\n    this.dishFlavors.push({ name: '', value: [] }) // JSON.parse(JSON.stringify(this.dishFlavorsData))\n  }\n\n  // 按钮 - 删除口味\n  private delFlavor(name: string) {\n    let ind = this.dishFlavors.findIndex(item => item.name === name)\n    this.dishFlavors.splice(ind, 1)\n  }\n\n  // 按钮 - 删除口味标签\n  private delFlavorLabel(index: number, ind: number) {\n    this.dishFlavors[index].value.splice(ind, 1)\n  }\n\n  //口味位置记录\n  private flavorPosition(index: number) {\n    this.index = index\n  }\n\n  // 添加口味标签\n  private keyDownHandle(val: any) {\n    if (event) {\n      event.cancelBubble = true\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    if (val.target.innerText.trim() != '') {\n      this.dishFlavors[this.index].flavorData.push(val.target.innerText)\n      val.target.innerText = ''\n    }\n  }\n\n  // 获取菜品分类\n  private getDishList() {\n    getCategoryList({ type: 1 }).then(res => {\n      if (res.data.code === 200) {\n        this.dishList = res && res.data && res.data.data\n      } else {\n        this.$message.error(res.data.msg)\n      }\n      // if (res.data.code == 200) {\n      //   const {data} = res.data\n      //   this.dishList = data\n      // } else {\n      //   this.$message.error(res.data.desc)\n      // }\n    })\n  }\n\n  // 获取口味列表\n  private getFlavorListHand() {\n    // flavor flavorData\n    this.dishFlavorsData = [\n      { name: 'Sweetness', value: ['No Sugar', 'Less Sugar', 'Half Sugar', 'More Sugar', 'Full Sugar'] },\n      { name: 'Temperature', value: ['Hot', 'Normal', 'No Ice', 'Less Ice', 'More Ice'] },\n      { name: 'Diet', value: ['No Scallions', 'No Garlic', 'No Cilantro'] },\n      { name: 'Spiciness', value: ['No Spicy', 'Less Spicy', 'Normal Spicy'] }\n    ]\n  }\n\n  private submitForm(formName: any, st: any) {\n    ;(this.$refs[formName] as any).validate((valid: any) => {\n      console.log(valid, 'valid')\n      if (valid) {\n        if (!this.ruleForm.image) return this.$message.error('Image cannot be empty')\n        let params: any = { ...this.ruleForm }\n        // params.flavors = this.dishFlavors\n        params.status =\n          this.actionType === 'add' ? 0 : this.ruleForm.status ? 1 : 0\n        // params.price *= 100\n        params.categoryId = this.ruleForm.categoryId\n        params.flavors = this.dishFlavors.map(obj => ({\n          ...obj,\n          value: JSON.stringify(obj.value)\n        }))\n        delete params.dishFlavors\n        if (this.actionType == 'add') {\n          delete params.id\n          addDish(params)\n            .then(res => {\n              if (res.data.code === 200) {\n                this.$message.success('Success!')\n                if (!st) {\n                  this.$router.push({ path: '/dish' })\n                } else {\n                  this.dishFlavors = []\n                  // this.dishFlavorsData = []\n                  this.imageUrl = ''\n                  this.ruleForm = {\n                    name: '',\n                    id: '',\n                    price: '',\n                    code: '',\n                    image: '',\n                    description: '',\n                    dishFlavors: [],\n                    status: true,\n                    categoryId: ''\n                  }\n                  this.restKey++\n                }\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n            })\n            .catch(err => {\n              this.$message.error('请求出错了：' + err.message)\n            })\n        } else {\n          delete params.createTime\n          delete params.updateTime\n          editDish(params)\n            .then(res => {\n              if (res && res.data && res.data.code === 200) {\n                this.$router.push({ path: '/dish' })\n                this.$message.success('菜品修改成功！')\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n              // if (res.data.code == 200) {\n              //   this.$router.push({'path': '/dish'})\n              //   this.$message.success('菜品修改成功！')\n              // } else {\n              //   this.$message.error(res.data.desc || res.data.message)\n              // }\n            })\n            .catch(err => {\n              this.$message.error('请求出错了：' + err.message)\n            })\n        }\n      } else {\n        return false\n      }\n    })\n  }\n\n  imageChange(value: any) {\n    this.ruleForm.image = value\n  }\n}\n",{"version":3,"sources":["addDishtype.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"addDishtype.vue","sourceRoot":"src/views/dish","sourcesContent":["<template>\n  <div :key=\"vueRest\"\n       class=\"addBrand-container\">\n    <div :key=\"restKey\"\n         class=\"container\">\n      <el-form ref=\"ruleForm\"\n               :model=\"ruleForm\"\n               :rules=\"rules\"\n               :inline=\"true\"\n               label-width=\"180px\"\n               class=\"demo-ruleForm\">\n        <div>\n          <el-form-item label=\"Name:\"\n                        prop=\"name\">\n            <el-input v-model=\"ruleForm.name\"\n                      placeholder=\"Please enter the name\"\n                      maxlength=\"20\" />\n          </el-form-item>\n          <el-form-item label=\"Category:\"\n                        prop=\"categoryId\">\n            <el-select v-model=\"ruleForm.categoryId\"\n                       placeholder=\"Please enter the category\">\n              <el-option v-for=\"(item, index) in dishList\"\n                         :key=\"index\"\n                         :label=\"item.name\"\n                         :value=\"item.id\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div>\n          <el-form-item label=\"Price:\"\n                        prop=\"price\">\n            <el-input v-model=\"ruleForm.price\"\n                      placeholder=\"Please set the price\"\n                      maxlength=\"5\"/>\n          </el-form-item>\n        </div>\n        <el-form-item label=\"Flavor:\">\n          <el-form-item>\n            <div class=\"flavorBox\">\n              <span v-if=\"dishFlavors.length == 0\"\n                    class=\"addBut\"\n                    @click=\"addFlavore\">\n                + Add Flavor</span>\n              <div v-if=\"dishFlavors.length != 0\"\n                   class=\"flavor\">\n                <div class=\"title\">\n                  <span>Flavor</span>\n                  <!-- <span class=\"des-box\">口味标签（输入标签回车添加）</span> -->\n                </div>\n                <div class=\"cont\">\n                  <div v-for=\"(item, index) in dishFlavors\"\n                       :key=\"index\"\n                       class=\"items\">\n                    <div class=\"itTit\">\n                      <!-- :dish-flavors-data=\"filterDishFlavorsData()\" -->\n                      <SelectInput :dish-flavors-data=\"leftDishFlavors\"\n                                   :index=\"index\"\n                                   :value=\"item.name\"\n                                   @select=\"selectHandle\" />\n                    </div>\n                    <div class=\"labItems\"\n                         style=\"display: flex\">\n                      <span v-for=\"(it, ind) in item.value\"\n                            :key=\"ind\">{{ it }}\n                        <i @click=\"delFlavorLabel(index, ind)\">X</i></span>\n                      <div class=\"inputBox\"\n                           :style=\"inputStyle\" />\n                    </div>\n                    <span class=\"delFlavor delBut non\"\n                          @click=\"delFlavor(item.name)\">删除</span>\n                  </div>\n                </div>\n                <div v-if=\"\n                       !!this.leftDishFlavors.length &&\n                         this.dishFlavors.length < this.dishFlavorsData.length\n                     \"\n                     class=\"addBut\"\n                     @click=\"addFlavore\">\n                  Add Flavor\n                </div>\n              </div>\n            </div>\n          </el-form-item>\n        </el-form-item>\n        <div>\n          <el-form-item label=\"Image:\"\n                        prop=\"image\">\n            <image-upload :prop-image-url=\"imageUrl\"\n                          @imageChange=\"imageChange\">\n              Image size not more than 2M<br>Only PNG JPEG JPG type images can be uploaded<br>It is recommended to upload a 200*200 or 300*300 size image\n            </image-upload>\n          </el-form-item>\n        </div>\n        <div class=\"address\">\n          <el-form-item label=\"Description:\"\n                        prop=\"region\">\n            <el-input v-model=\"ruleForm.description\"\n                      type=\"textarea\"\n                      :rows=\"3\"\n                      maxlength=\"200\"\n                      placeholder=\"Description of the dish, maximum 200 words\" />\n          </el-form-item>\n        </div>\n        <div class=\"subBox address\">\n          <el-button @click=\"() => $router.back()\">\n            Cancel\n          </el-button>\n          <el-button type=\"primary\"\n                     :class=\"{ continue: actionType === 'add' }\"\n                     @click=\"submitForm('ruleForm')\">\n            Submit\n          </el-button>\n          <el-button v-if=\"actionType == 'add'\"\n                     type=\"primary\"\n                     @click=\"submitForm('ruleForm', 'goAnd')\">\n            Submit and continue adding\n          </el-button>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport SelectInput from './components/SelectInput.vue'\nimport ImageUpload from '@/components/ImgUpload/index.vue'\n// getFlavorList口味列表暂时不做 getDishTypeList\nimport {\n  queryDishById,\n  addDish,\n  editDish,\n  getCategoryList,\n  commonDownload\n} from '@/api/dish'\nimport { baseUrl } from '@/config.json'\nimport { getToken } from '@/utils/cookies'\n@Component({\n  name: 'addShop',\n  components: {\n    HeadLable,\n    SelectInput,\n    ImageUpload\n  }\n})\nexport default class extends Vue {\n  private restKey: number = 0\n  private textarea: string = ''\n  private value: string = ''\n  private imageUrl: string = ''\n  private actionType: string = ''\n  private dishList: string[] = []\n  private dishFlavorsData: any[] = [] //原始口味数据\n  private dishFlavors: any[] = [] //待上传口味的数据\n  private leftDishFlavors: any[] = [] //下拉框剩余可选择的口味数据\n  private vueRest = '1'\n  private index = 0\n  private inputStyle = { flex: 1 }\n  private headers = {\n    token: getToken()\n  }\n  private ruleForm = {\n    name: '',\n    id: '',\n    price: '',\n    code: '',\n    image: '',\n    description: '',\n    dishFlavors: [],\n    status: true,\n    categoryId: ''\n  }\n\n  get rules() {\n    return {\n      name: [\n        {\n          required: true,\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter the name'))\n            } else {\n              const reg = /^([A-Za-z0-9\\u4e00-\\u9fa5]){1,32}$/\n              if (!reg.test(value)) {\n                callback(new Error('The input of the dish name does not match, please enter 2-20 characters'))\n              } else {\n                callback()\n              }\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      categoryId: [\n        { required: true, message: 'Please select a category', trigger: 'change' }\n      ],\n      image: {\n        required: true,\n        message: 'Image cannot be empty'\n      },\n      price: [\n        {\n          required: true,\n          // 'message': '请填写菜品价格',\n          validator: (rules: any, value: string, callback: Function) => {\n            const reg = /^([1-9]\\d{0,5}|0)(\\.\\d{1,2})?$/\n            if (!reg.test(value) || Number(value) <= 0) {\n              callback(\n                new Error(\n                  'Greater than zero and with up to two decimal places'\n                )\n              )\n            } else {\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      code: [{ required: true, message: 'Please fill in the product code', trigger: 'blur' }]\n    }\n  }\n\n  created() {\n    this.getDishList()\n    // 口味临时数据\n    this.getFlavorListHand()\n    this.actionType = this.$route.query.id ? 'edit' : 'add'\n    if (this.$route.query.id) {\n      this.init()\n    }\n  }\n\n  mounted() {}\n  @Watch('dishFlavors')\n  changeDishFlavors() {\n    this.getLeftDishFlavors()\n  }\n\n  //过滤已选择的口味下拉框无法再次选择\n  getLeftDishFlavors() {\n    let arr = []\n    this.dishFlavorsData.map(item => {\n      if (\n        this.dishFlavors.findIndex(item1 => item.name === item1.name) === -1\n      ) {\n        arr.push(item)\n      }\n    })\n    this.leftDishFlavors = arr\n  }\n\n  private selectHandle(val: any, key: any, ind: any) {\n    const arrDate = [...this.dishFlavors]\n    const index = this.dishFlavorsData.findIndex(item => item.name === val)\n    arrDate[key] = JSON.parse(JSON.stringify(this.dishFlavorsData[index]))\n    this.dishFlavors = arrDate\n  }\n\n  private async init() {\n    queryDishById(this.$route.query.id).then(res => {\n      if (res && res.data && res.data.code === 200) {\n        this.ruleForm = { ...res.data.data }\n        this.ruleForm.price = String(res.data.data.price)\n        this.ruleForm.status = res.data.data.status == '1'\n        this.dishFlavors =\n          res.data.data.flavors &&\n          res.data.data.flavors.map(obj => ({\n            ...obj,\n            value: JSON.parse(obj.value)\n          }))\n        let arr = []\n        this.getLeftDishFlavors()\n        this.imageUrl = res.data.data.image\n      } else {\n        this.$message.error(res.data.msg)\n      }\n    })\n  }\n\n  // 按钮 - 添加口味\n  private addFlavore() {\n    this.dishFlavors.push({ name: '', value: [] }) // JSON.parse(JSON.stringify(this.dishFlavorsData))\n  }\n\n  // 按钮 - 删除口味\n  private delFlavor(name: string) {\n    let ind = this.dishFlavors.findIndex(item => item.name === name)\n    this.dishFlavors.splice(ind, 1)\n  }\n\n  // 按钮 - 删除口味标签\n  private delFlavorLabel(index: number, ind: number) {\n    this.dishFlavors[index].value.splice(ind, 1)\n  }\n\n  //口味位置记录\n  private flavorPosition(index: number) {\n    this.index = index\n  }\n\n  // 添加口味标签\n  private keyDownHandle(val: any) {\n    if (event) {\n      event.cancelBubble = true\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    if (val.target.innerText.trim() != '') {\n      this.dishFlavors[this.index].flavorData.push(val.target.innerText)\n      val.target.innerText = ''\n    }\n  }\n\n  // 获取菜品分类\n  private getDishList() {\n    getCategoryList({ type: 1 }).then(res => {\n      if (res.data.code === 200) {\n        this.dishList = res && res.data && res.data.data\n      } else {\n        this.$message.error(res.data.msg)\n      }\n      // if (res.data.code == 200) {\n      //   const {data} = res.data\n      //   this.dishList = data\n      // } else {\n      //   this.$message.error(res.data.desc)\n      // }\n    })\n  }\n\n  // 获取口味列表\n  private getFlavorListHand() {\n    // flavor flavorData\n    this.dishFlavorsData = [\n      { name: 'Sweetness', value: ['No Sugar', 'Less Sugar', 'Half Sugar', 'More Sugar', 'Full Sugar'] },\n      { name: 'Temperature', value: ['Hot', 'Normal', 'No Ice', 'Less Ice', 'More Ice'] },\n      { name: 'Diet', value: ['No Scallions', 'No Garlic', 'No Cilantro'] },\n      { name: 'Spiciness', value: ['No Spicy', 'Less Spicy', 'Normal Spicy'] }\n    ]\n  }\n\n  private submitForm(formName: any, st: any) {\n    ;(this.$refs[formName] as any).validate((valid: any) => {\n      console.log(valid, 'valid')\n      if (valid) {\n        if (!this.ruleForm.image) return this.$message.error('Image cannot be empty')\n        let params: any = { ...this.ruleForm }\n        // params.flavors = this.dishFlavors\n        params.status =\n          this.actionType === 'add' ? 0 : this.ruleForm.status ? 1 : 0\n        // params.price *= 100\n        params.categoryId = this.ruleForm.categoryId\n        params.flavors = this.dishFlavors.map(obj => ({\n          ...obj,\n          value: JSON.stringify(obj.value)\n        }))\n        delete params.dishFlavors\n        if (this.actionType == 'add') {\n          delete params.id\n          addDish(params)\n            .then(res => {\n              if (res.data.code === 200) {\n                this.$message.success('Success!')\n                if (!st) {\n                  this.$router.push({ path: '/dish' })\n                } else {\n                  this.dishFlavors = []\n                  // this.dishFlavorsData = []\n                  this.imageUrl = ''\n                  this.ruleForm = {\n                    name: '',\n                    id: '',\n                    price: '',\n                    code: '',\n                    image: '',\n                    description: '',\n                    dishFlavors: [],\n                    status: true,\n                    categoryId: ''\n                  }\n                  this.restKey++\n                }\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n            })\n            .catch(err => {\n              this.$message.error('请求出错了：' + err.message)\n            })\n        } else {\n          delete params.createTime\n          delete params.updateTime\n          editDish(params)\n            .then(res => {\n              if (res && res.data && res.data.code === 200) {\n                this.$router.push({ path: '/dish' })\n                this.$message.success('菜品修改成功！')\n              } else {\n                this.$message.error(res.data.desc || res.data.msg)\n              }\n              // if (res.data.code == 200) {\n              //   this.$router.push({'path': '/dish'})\n              //   this.$message.success('菜品修改成功！')\n              // } else {\n              //   this.$message.error(res.data.desc || res.data.message)\n              // }\n            })\n            .catch(err => {\n              this.$message.error('请求出错了：' + err.message)\n            })\n        }\n      } else {\n        return false\n      }\n    })\n  }\n\n  imageChange(value: any) {\n    this.ruleForm.image = value\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.addBrand-container {\n  .el-form--inline .el-form-item__content {\n    width: 293px;\n  }\n\n  .el-input {\n    width: 350px;\n  }\n\n  .address {\n    .el-form-item__content {\n      width: 777px !important;\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.addBrand {\n  &-container {\n    margin: 30px;\n\n    .container {\n      position: relative;\n      z-index: 1;\n      background: #fff;\n      padding: 30px;\n      border-radius: 4px;\n      min-height: 500px;\n\n      .subBox {\n        padding-top: 30px;\n        text-align: center;\n        border-top: solid 1px $gray-5;\n      }\n      .upload-item {\n        .el-form-item__error {\n          top: 90%;\n        }\n      }\n    }\n  }\n}\n\n.flavorBox {\n  width: 777px;\n\n  .addBut {\n    background: #ffc200;\n    display: inline-block;\n    padding: 0px 20px;\n    border-radius: 3px;\n    line-height: 40px;\n    cursor: pointer;\n    border-radius: 4px;\n    color: #333333;\n    font-weight: 500;\n  }\n\n  .flavor {\n    border: solid 1px #dfe2e8;\n    border-radius: 3px;\n    padding: 15px;\n    background: #fafafb;\n\n    .title {\n      color: #606168;\n      .des-box {\n        padding-left: 44px;\n      }\n    }\n\n    .cont {\n      .items {\n        display: flex;\n        margin: 10px 0;\n\n        .itTit {\n          width: 150px;\n          margin-right: 15px;\n\n          input {\n            width: 100%;\n            // line-height: 40px;\n            // border-radius: 3px;\n            // padding: 0 10px;\n          }\n        }\n\n        .labItems {\n          flex: 1;\n          display: flex;\n          flex-wrap: wrap;\n          border-radius: 3px;\n          min-height: 39px;\n          border: solid 1px #d8dde3;\n          background: #fff;\n          padding: 0 5px;\n\n          span {\n            display: inline-block;\n            color: #ffc200;\n            margin: 5px;\n            line-height: 26px;\n            padding: 0 10px;\n            background: #fffbf0;\n            border: 1px solid #fbe396;\n            border-radius: 4px;\n            font-size: 12px;\n\n            i {\n              cursor: pointer;\n              font-style: normal;\n            }\n          }\n\n          .inputBox {\n            display: inline-block;\n            width: 100%;\n            height: 36px;\n            line-height: 36px;\n            overflow: hidden;\n          }\n        }\n\n        .delFlavor {\n          display: inline-block;\n          padding: 0 10px;\n          color: #f19c59;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}