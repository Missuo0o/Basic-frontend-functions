{"remainingRequest":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/employee/addEmployee.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/src/views/employee/addEmployee.vue","mtime":1706504194029},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/babel-loader/lib/index.js","mtime":1706160675266},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/ts-loader/index.js","mtime":1706160677894},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1706160675340},{"path":"/Users/huoxiyi/IdeaProjects/MissuoFrontend/node_modules/vue-loader/lib/index.js","mtime":1706160678107}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport { queryEmployeeById, addEmployee, editEmployee } from '@/api/employee'\n\n@Component({\n  name: 'addShop',\n  components: {\n    HeadLable\n  }\n})\nexport default class extends Vue {\n  private title = 'Add Employee'\n  private actionType = ''\n  private ruleForm = {\n    name: '',\n    phone: '',\n    // 'password': '',\n    // 'rePassword': '',\n    sex: 'Male',\n    idNumber: '',\n    username: ''\n  }\n\n  // private validateRepassword (rule:any, value:any, callback:any) {\n  //   if (value === '') {\n  //     callback(new Error('请再次输入密码'))\n  //   } else if (value !== this.ruleForm.password) {\n  //     callback(new Error('两次输入密码不一致!'))\n  //   } else {\n  //     callback()\n  //   }\n  // }\n\n  private isCellPhone(val: any) {\n    if (!/^(?:\\(\\d{3}\\)\\s?|\\d{3}-)?\\d{3}-\\d{4}$/.test(val)) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  private checkphone(rule: any, value: any, callback: any) {\n    // let phoneReg = /(^1[3|4|5|6|7|8|9]\\d{9}$)|(^09\\d{8}$)/;\n    if (value == '') {\n      callback(new Error('Please enter the phone number'))\n    }\n    else if (!this.isCellPhone(value)) {\n      //引入methods中封装的检查手机格式的方法\n      callback(new Error('Please enter the correct number!'))\n    }\n    else {\n      callback()\n    }\n  }\n\n  private validID(rule: any, value: any, callback: any) {\n    // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\n    // let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\n    if (value == '') {\n      callback(new Error('Please enter the idNumber'))\n    }\n    // else if (reg.test(value)) {\n    //   callback()\n    // }\n    else {\n      callback()\n    }\n  }\n\n  get rules() {\n    return {\n      name: [\n        {\n          required: true,\n          // 'message': '请输入员工姓名',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter the name'))\n            } else {\n              const reg = /^[\\u4e00-\\u9fa5_a-zA-Z]{1,12}$/\n              if (!reg.test(value)) {\n                callback(new Error('The name input does not match, please enter 1-12 characters'))\n              } else {\n                callback()\n              }\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      username: [\n        {\n          required: true,\n          // message: '请输入账号',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter your username'))\n            } else {\n              const reg = /^([a-z]|[0-9]){3,20}$/\n              if (!reg.test(value)) {\n                callback(new Error('Account number input does not match, please enter 3-20 characters'))\n              } else {\n                callback()\n              }\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      phone: [{ required: true, validator: this.checkphone, trigger: 'blur' }],\n      idNumber: [{ required: true, validator: this.validID, trigger: 'blur' }]\n    }\n  }\n\n  created() {\n    this.actionType = this.$route.query.id ? 'edit' : 'add'\n    if (this.$route.query.id) {\n      this.title = 'Update Employee'\n      this.init()\n    }\n  }\n\n  private async init() {\n    const id = this.$route.query.id\n    queryEmployeeById(id).then((res: any) => {\n      // String(res.status) === '200'\n      if (res.data.code === 200) {\n        this.ruleForm = res.data.data\n        this.ruleForm.sex = res.data.data.sex === '0' ? 'Female' : 'Male'\n        // this.ruleForm.password = ''\n      } else {\n        this.$message.error(res.data.msg)\n      }\n      // if (res.data.code == 200) {\n      //   const { data } = res.data\n      //   this.ruleForm = data\n      //   this.ruleForm.password = ''\n      //   // this.ruleForm.rePassword = '' //JSON.parse(JSON.stringify(data.password));\n      // } else {\n      //   this.$message.error(res.data.desc)\n      // }\n    })\n  }\n\n  private submitForm(formName: any, st: any) {\n    ;(this.$refs[formName] as any).validate((valid: any) => {\n      if (valid) {\n        if (this.actionType === 'add') {\n          const params = {\n            ...this.ruleForm,\n            sex: this.ruleForm.sex === 'Female' ? 0 : 1\n          }\n          addEmployee(params)\n            .then((res: any) => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                if (!st) {\n                  this.$router.push({ path: '/employee' })\n                } else {\n                  this.ruleForm = {\n                    username: '',\n                    name: '',\n                    phone: '',\n                    // 'password': '',\n                    // npm'rePassword': '',/\n                    sex: 'Male',\n                    idNumber: ''\n                  }\n                }\n              } else {\n                this.$message.error(res.data.msg)\n              }\n            })\n            .catch(() => {\n              // this.$message.error(res.data.msg)\n            })\n        } else {\n          const params = {\n            ...this.ruleForm,\n            sex: this.ruleForm.sex === 'Female' ? 0 : 1\n          }\n          editEmployee(params)\n            .then((res: any) => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                this.$router.push({ path: '/employee' })\n              } else {\n                this.$message.error(res.data.msg)\n              }\n            })\n            .catch(() => {\n              // this.$message.error('请求出错了：' + err.message)\n            })\n        }\n      } else {\n        return false\n      }\n    })\n  }\n}\n",{"version":3,"sources":["addEmployee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEmployee.vue","sourceRoot":"src/views/employee","sourcesContent":["<template>\n  <div class=\"addBrand-container\">\n    <HeadLable :title=\"title\"\n               :goback=\"true\" />\n    <div class=\"container\">\n      <el-form ref=\"ruleForm\"\n               :model=\"ruleForm\"\n               :rules=\"rules\"\n               :inline=\"false\"\n               label-width=\"180px\"\n               class=\"demo-ruleForm\">\n        <!--          <el-form-item label=\"员工职级\" prop=\"region\">-->\n        <!--            <el-select v-model=\"ruleForm.region\" placeholder=\"请选择品牌名称\">-->\n        <!--              <el-option label=\"区域一\" value=\"shanghai\"></el-option>-->\n        <!--              <el-option label=\"区域二\" value=\"beijing\"></el-option>-->\n        <!--            </el-select>-->\n        <!--            <el-button @click=\"submitForm('ruleForm')\" type=\"primary\" class=\"continue\" style=\"margin-left: 10px;\" >+新增职级</el-button>-->\n        <!--          </el-form-item>-->\n        <el-form-item label=\"Username:\"\n                      prop=\"username\">\n          <el-input v-model=\"ruleForm.username\"\n                    placeholder=\"Please enter the username\"\n                    maxlength=\"20\" />\n        </el-form-item>\n        <el-form-item label=\"Name:\"\n                      prop=\"name\">\n          <el-input v-model=\"ruleForm.name\"\n                    placeholder=\"Please enter the name\"\n                    maxlength=\"12\" />\n        </el-form-item>\n        <!-- <el-form-item\n          label=\"密码:\"\n          prop=\"password\"\n        >\n          <el-input\n            v-model=\"ruleForm.password\"\n            type=\"password\"\n            autocomplete=\"off\"\n            placeholder=\"请输入密码\"\n          />\n        </el-form-item> -->\n        <!-- <el-form-item\n          label=\"确认密码:\"\n          prop=\"rePassword\"\n        >\n          <el-input\n            v-model=\"ruleForm.rePassword\"\n            type=\"password\"\n            autocomplete=\"off\"\n            placeholder=\"请输入确认密码\"\n          />\n        </el-form-item> -->\n        <el-form-item label=\"Phone:\"\n                      prop=\"phone\">\n          <el-input v-model=\"ruleForm.phone\"\n                    placeholder=\"Please enter the phone\"\n                    maxlength=\"10\" />\n        </el-form-item>\n        <el-form-item label=\"Sex:\"\n                      prop=\"sex\">\n          <el-radio-group v-model=\"ruleForm.sex\">\n            <el-radio label=\"Male\" />\n            <el-radio label=\"Female\" />\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"IdNumber:\"\n                      prop=\"idNumber\"\n                      class=\"idNumber\">\n          <el-input v-model=\"ruleForm.idNumber\"\n                    placeholder=\"Please enter the idNumber\"\n                    maxlength=\"10\" />\n        </el-form-item>\n        <div class=\"subBox address\">\n          <!-- <el-form-item> -->\n          <el-button @click=\"() => $router.push('/employee')\">\n            Cancel\n          </el-button>\n          <el-button type=\"primary\"\n                     :class=\"{ continue: actionType === 'add' }\"\n                     @click=\"submitForm('ruleForm', false)\">\n            Submit\n          </el-button>\n          <el-button v-if=\"actionType == 'add'\"\n                     type=\"primary\"\n                     @click=\"submitForm('ruleForm', true)\">\n            Submit and continue adding\n          </el-button>\n          <!-- </el-form-item> -->\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport { queryEmployeeById, addEmployee, editEmployee } from '@/api/employee'\n\n@Component({\n  name: 'addShop',\n  components: {\n    HeadLable\n  }\n})\nexport default class extends Vue {\n  private title = 'Add Employee'\n  private actionType = ''\n  private ruleForm = {\n    name: '',\n    phone: '',\n    // 'password': '',\n    // 'rePassword': '',\n    sex: 'Male',\n    idNumber: '',\n    username: ''\n  }\n\n  // private validateRepassword (rule:any, value:any, callback:any) {\n  //   if (value === '') {\n  //     callback(new Error('请再次输入密码'))\n  //   } else if (value !== this.ruleForm.password) {\n  //     callback(new Error('两次输入密码不一致!'))\n  //   } else {\n  //     callback()\n  //   }\n  // }\n\n  private isCellPhone(val: any) {\n    if (!/^(?:\\(\\d{3}\\)\\s?|\\d{3}-)?\\d{3}-\\d{4}$/.test(val)) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  private checkphone(rule: any, value: any, callback: any) {\n    // let phoneReg = /(^1[3|4|5|6|7|8|9]\\d{9}$)|(^09\\d{8}$)/;\n    if (value == '') {\n      callback(new Error('Please enter the phone number'))\n    }\n    else if (!this.isCellPhone(value)) {\n      //引入methods中封装的检查手机格式的方法\n      callback(new Error('Please enter the correct number!'))\n    }\n    else {\n      callback()\n    }\n  }\n\n  private validID(rule: any, value: any, callback: any) {\n    // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\n    // let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\n    if (value == '') {\n      callback(new Error('Please enter the idNumber'))\n    }\n    // else if (reg.test(value)) {\n    //   callback()\n    // }\n    else {\n      callback()\n    }\n  }\n\n  get rules() {\n    return {\n      name: [\n        {\n          required: true,\n          // 'message': '请输入员工姓名',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter the name'))\n            } else {\n              const reg = /^[\\u4e00-\\u9fa5_a-zA-Z]{1,12}$/\n              if (!reg.test(value)) {\n                callback(new Error('The name input does not match, please enter 1-12 characters'))\n              } else {\n                callback()\n              }\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      username: [\n        {\n          required: true,\n          // message: '请输入账号',\n          validator: (rule: any, value: string, callback: Function) => {\n            if (!value) {\n              callback(new Error('Please enter your username'))\n            } else {\n              const reg = /^([a-z]|[0-9]){3,20}$/\n              if (!reg.test(value)) {\n                callback(new Error('Account number input does not match, please enter 3-20 characters'))\n              } else {\n                callback()\n              }\n            }\n          },\n          trigger: 'blur'\n        }\n      ],\n      phone: [{ required: true, validator: this.checkphone, trigger: 'blur' }],\n      idNumber: [{ required: true, validator: this.validID, trigger: 'blur' }]\n    }\n  }\n\n  created() {\n    this.actionType = this.$route.query.id ? 'edit' : 'add'\n    if (this.$route.query.id) {\n      this.title = 'Update Employee'\n      this.init()\n    }\n  }\n\n  private async init() {\n    const id = this.$route.query.id\n    queryEmployeeById(id).then((res: any) => {\n      // String(res.status) === '200'\n      if (res.data.code === 200) {\n        this.ruleForm = res.data.data\n        this.ruleForm.sex = res.data.data.sex === '0' ? 'Female' : 'Male'\n        // this.ruleForm.password = ''\n      } else {\n        this.$message.error(res.data.msg)\n      }\n      // if (res.data.code == 200) {\n      //   const { data } = res.data\n      //   this.ruleForm = data\n      //   this.ruleForm.password = ''\n      //   // this.ruleForm.rePassword = '' //JSON.parse(JSON.stringify(data.password));\n      // } else {\n      //   this.$message.error(res.data.desc)\n      // }\n    })\n  }\n\n  private submitForm(formName: any, st: any) {\n    ;(this.$refs[formName] as any).validate((valid: any) => {\n      if (valid) {\n        if (this.actionType === 'add') {\n          const params = {\n            ...this.ruleForm,\n            sex: this.ruleForm.sex === 'Female' ? 0 : 1\n          }\n          addEmployee(params)\n            .then((res: any) => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                if (!st) {\n                  this.$router.push({ path: '/employee' })\n                } else {\n                  this.ruleForm = {\n                    username: '',\n                    name: '',\n                    phone: '',\n                    // 'password': '',\n                    // npm'rePassword': '',/\n                    sex: 'Male',\n                    idNumber: ''\n                  }\n                }\n              } else {\n                this.$message.error(res.data.msg)\n              }\n            })\n            .catch(() => {\n              // this.$message.error(res.data.msg)\n            })\n        } else {\n          const params = {\n            ...this.ruleForm,\n            sex: this.ruleForm.sex === 'Female' ? 0 : 1\n          }\n          editEmployee(params)\n            .then((res: any) => {\n              if (res.data.code === 200) {\n                this.$message.success('Success ！')\n                this.$router.push({ path: '/employee' })\n              } else {\n                this.$message.error(res.data.msg)\n              }\n            })\n            .catch(() => {\n              // this.$message.error('请求出错了：' + err.message)\n            })\n        }\n      } else {\n        return false\n      }\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.addBrand {\n  &-container {\n    margin: 30px;\n    margin-top: 0px;\n    .HeadLable {\n      background-color: transparent;\n      margin-bottom: 0px;\n      padding-left: 0px;\n    }\n    .container {\n      position: relative;\n      z-index: 1;\n      background: #fff;\n      padding: 30px;\n      border-radius: 4px;\n      // min-height: 500px;\n      .subBox {\n        padding-top: 30px;\n        text-align: center;\n        border-top: solid 1px $gray-5;\n      }\n    }\n    .idNumber {\n      margin-bottom: 39px;\n    }\n\n    .el-form-item {\n      margin-bottom: 29px;\n    }\n    .el-input {\n      width: 293px;\n    }\n  }\n}\n</style>\n"]}]}